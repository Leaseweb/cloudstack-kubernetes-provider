name: Release

on:
  push:
    branches:
      - master
    tags:
      - v*

env:
  REGISTRY_NAME: ghcr.io/leaseweb
  IMAGE: "cloud-controller-manager"

jobs:
  push:
    name: Push images
    runs-on: ubuntu-22.04

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Push master
        if: github.ref == 'refs/heads/master'
        run: |
            docker tag ${IMAGE} ${REGISTRY_NAME}/${IMAGE}:master
            docker push ${REGISTRY_NAME}/${IMAGE}:master

      - name: Push tagged release
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # Strip prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,' | sed -e 's/^v//')
          
          docker tag ${IMAGE}} ${REGISTRY_NAME}/${IMAGE}:${VERSION}
          docker push ${REGISTRY_NAME}/${IMAGE}:${VERSION}

  release:
    name: Release
    runs-on: ubuntu-20.04

    # Run only if previous job has succeeded
    needs: [push]

    # Create a release only for tags v*
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create manifest
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,' | sed -e 's/^v//')
          echo "---" >> manifest.yaml
          cat deploy/k8s/rbac.yaml >> manifest.yaml
          echo "---" >> manifest.yaml
          sed -E "s|image: +cloudstack-kubernetes-provider|image: ${REGISTRY_NAME}/cloudstack-kubernetes-provider:${VERSION}|" deploy/k8s/deployment.yaml >> manifest.yaml

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: manifest.yaml
          asset_name: manifest.yaml
          asset_content_type: application/x-yaml